group 'gs-gcp-ktor'
version '1.0-SNAPSHOT'

buildscript {
    ext.versions = [
            kotlin : '1.2.10',
            ktor   : '0.9.0',
            jackson: '2.9.3',
            slf4j  : '1.7.21',
    ]

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'
    }
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.google.cloud.tools.appengine'

mainClassName = 'main.Main'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url 'https://maven-central.storage.googleapis.com' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
    compile "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"

    compile("io.ktor:ktor-server-core:$versions.ktor") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jre7'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jre8'
    }
    compile("io.ktor:ktor-jackson:$versions.ktor") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jre7'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jre8'
    }
    compile("io.ktor:ktor-server-netty:$versions.ktor") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jre7'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jre8'
    }

    compile "ch.qos.logback:logback-classic:1.2.3"

    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$versions.jackson"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$versions.jackson"

    testCompile 'junit:junit:4.12'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}


appengine {
    stage {
        artifact = "build/libs/$name-$version-all.jar"
    }

    deploy {   // deploy configuration
        stopPreviousVersion = true  // default - stop the current version
        promote = true              // default - & make this the current version
    }
}
